{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "PrimalMyst Damage System",
  "description": "Schema for damage types and combat mechanics in PrimalMyst",
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "pattern": "^[a-z0-9-]+$",
      "description": "Unique identifier for the damage type or combat mechanic"
    },
    "name": {
      "type": "string",
      "description": "Display name of the damage type"
    },
    "category": {
      "type": "string",
      "enum": ["elemental", "primal", "mystical", "hybrid"],
      "description": "Primary damage category"
    },
    "type": {
      "type": "string",
      "enum": ["fire", "cold", "lightning", "radiance", "chaos", "physical"],
      "description": "Specific damage type"
    },
    "hexagonal_position": {
      "type": "object",
      "description": "Position within the core thematic hexagon structure",
      "properties": {
        "vertex": {
          "type": "integer",
          "minimum": 1,
          "maximum": 6,
          "description": "Position in hexagon (1=top, clockwise)"
        },
        "theme": {
          "type": "string",
          "description": "Thematic concept for this vertex"
        },
        "associated_god": {
          "type": "string",
          "description": "The Eldritch God associated with this damage type"
        },
        "god_tier": {
          "type": "string",
          "enum": ["fundamental", "primal"],
          "description": "Whether this is a Fundamental or Primal god"
        },
        "primary_attribute": {
          "type": "string",
          "enum": ["strength", "dexterity", "intelligence"],
          "description": "Primary character attribute for this damage type"
        },
        "secondary_attribute": {
          "type": ["string", "null"],
          "enum": ["strength", "dexterity", "intelligence", null],
          "description": "Secondary attribute (null for pure builds)"
        },
        "defense_type": {
          "type": "string",
          "description": "Preferred defense approach for this vertex"
        },
        "adjacent_synergies": {
          "type": "array",
          "items": {"type": "string"},
          "minItems": 2,
          "maxItems": 2,
          "description": "The two adjacent damage types that synergize"
        },
        "opposite_element": {
          "type": "string",
          "description": "The opposite damage type in the hexagon"
        }
      },
      "required": ["vertex", "theme", "associated_god", "god_tier", "primary_attribute", "defense_type", "adjacent_synergies", "opposite_element"]
    },
    "description": {
      "type": "object",
      "properties": {
        "brief": {
          "type": "string",
          "maxLength": 200,
          "description": "Brief description of the damage type"
        },
        "detailed": {
          "type": "string",
          "description": "Comprehensive explanation of how this damage works"
        },
        "visual_effects": {
          "type": "string",
          "description": "Visual representation of this damage type"
        },
        "lore_explanation": {
          "type": "string",
          "description": "In-world explanation for this damage type"
        }
      },
      "required": ["brief", "detailed"]
    },
    "mechanics": {
      "type": "object",
      "properties": {
        "base_damage": {
          "type": "object",
          "properties": {
            "scaling_factor": {
              "type": "number",
              "description": "Base damage scaling multiplier"
            },
            "variance": {
              "type": "object",
              "properties": {
                "min_percent": {
                  "type": "number",
                  "description": "Minimum damage as percentage of base"
                },
                "max_percent": {
                  "type": "number", 
                  "description": "Maximum damage as percentage of base"
                }
              }
            }
          }
        },
        "status_effects": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "effect_name": {
                "type": "string",
                "description": "Name of the status effect"
              },
              "duration": {
                "type": "string",
                "description": "How long the effect lasts"
              },
              "stacking": {
                "type": "boolean",
                "description": "Whether multiple applications stack"
              },
              "description": {
                "type": "string",
                "description": "What the status effect does"
              }
            }
          }
        },
        "resistances": {
          "type": "object",
          "properties": {
            "armor_effectiveness": {
              "type": "number",
              "description": "How well armor protects against this damage (0-1)"
            },
            "resistance_sources": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "What provides resistance to this damage type"
            },
            "penetration_mechanics": {
              "type": "string",
              "description": "How this damage type can bypass defenses"
            }
          }
        },
        "interactions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "with_damage_type": {
                "type": "string",
                "description": "Damage type this interacts with"
              },
              "interaction_type": {
                "type": "string",
                "enum": ["amplifies", "reduces", "converts", "triggers", "combines"],
                "description": "Type of interaction"
              },
              "result": {
                "type": "string",
                "description": "What happens during the interaction"
              },
              "conditions": {
                "type": "string",
                "description": "When this interaction occurs"
              }
            }
          }
        },
        "hexagonal_interactions": {
          "type": "object",
          "description": "Damage effectiveness multipliers based on hexagonal position relationships",
          "properties": {
            "effectiveness_vs": {
              "type": "object",
              "description": "Damage multipliers when this damage type attacks other types",
              "properties": {
                "cold": {"type": "number", "description": "Effectiveness multiplier vs Cold"},
                "chaos": {"type": "number", "description": "Effectiveness multiplier vs Chaos"},
                "lightning": {"type": "number", "description": "Effectiveness multiplier vs Lightning"},
                "physical": {"type": "number", "description": "Effectiveness multiplier vs Physical"},
                "fire": {"type": "number", "description": "Effectiveness multiplier vs Fire"},
                "radiance": {"type": "number", "description": "Effectiveness multiplier vs Radiance"}
              },
              "required": ["cold", "chaos", "lightning", "physical", "fire", "radiance"]
            },
            "position_relationships": {
              "type": "object",
              "description": "Relationship types with other hexagonal positions",
              "properties": {
                "next": {"type": "string", "description": "Next damage type clockwise (+1)"},
                "second_next": {"type": "string", "description": "Second next damage type (+2)"},
                "opposite": {"type": "string", "description": "Opposite damage type (+3)"},
                "second_previous": {"type": "string", "description": "Second previous damage type (+4)"},
                "previous": {"type": "string", "description": "Previous damage type (+5)"}
              },
              "required": ["next", "second_next", "opposite", "second_previous", "previous"]
            },
            "divine_trio_dynamics": {
              "type": "object",
              "description": "How this damage type interacts within divine trio relationships",
              "properties": {
                "trio_type": {
                  "type": "string", 
                  "enum": ["fundamental", "primal"],
                  "description": "Which divine trio this belongs to"
                },
                "trio_interactions": {
                  "type": "string",
                  "description": "Rock-paper-scissors dynamics within the trio"
                },
                "cross_trio_relationship": {
                  "type": "string",
                  "description": "How this trio relates to the other trio"
                }
              },
              "required": ["trio_type", "trio_interactions", "cross_trio_relationship"]
            }
          },
          "required": ["effectiveness_vs", "position_relationships", "divine_trio_dynamics"]
        }
      }
    },
    "mystical_aspects": {
      "type": "object",
      "description": "How this damage type relates to mystical mechanics",
      "properties": {
        "time_interaction": {
          "type": "string",
          "enum": ["accelerates", "slows", "fragments", "echoes", "amplifies", "nullifies"],
          "description": "How this damage affects time flow"
        },
        "mist-walker_synergy": {
          "type": "string",
          "description": "Special interactions with mist-walker abilities"
        },
        "mystical_enhancement": {
          "type": "string",
          "description": "How mystical abilities can enhance this damage"
        }
      }
    },
    "equipment_synergy": {
      "type": "object",
      "properties": {
        "weapon_types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Weapon types that work well with this damage"
        },
        "armor_interactions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "How armor can modify this damage type"
        },
        "artifact_synergies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "mystical artifacts that enhance this damage"
        }
      }
    },
    "enemy_vulnerabilities": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "enemy_type": {
            "type": "string",
            "description": "Type of enemy vulnerable to this damage"
          },
          "vulnerability_reason": {
            "type": "string",
            "description": "Why this enemy type is vulnerable"
          },
          "effectiveness_multiplier": {
            "type": "number",
            "description": "Damage multiplier against this enemy type"
          }
        }
      }
    },
    "build_archetypes": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "archetype_name": {
            "type": "string",
            "description": "Name of the build archetype"
          },
          "focus": {
            "type": "string",
            "description": "Primary focus of builds using this damage type"
          },
          "synergistic_skills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Skills that work well with this damage type"
          }
        }
      }
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Searchable tags for categorization"
    },
    "metadata": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp"
        },
        "last_updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp"
        },
        "author": {
          "type": "string",
          "description": "Content creator/author"
        },
        "version": {
          "type": "string",
          "description": "Content version"
        },
        "canonical": {
          "type": "boolean",
          "description": "Whether this is official canonical content"
        }
      },
      "required": ["created", "last_updated", "canonical"]
    }
  },
  "required": ["id", "name", "category", "type", "description", "metadata"],
  "additionalProperties": false
}



